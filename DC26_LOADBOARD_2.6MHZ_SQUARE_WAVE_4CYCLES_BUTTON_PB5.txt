//DC26_LOADBOARD_2.6MHZ_SQUARE_WAVE_4CYCLES_BUTTON_PB5
//W.McCaffrey, E.Tann, T.Huddleston
//DC2026 Testing 6/6/2025
//Attempt to use PB5 as button input and cycle 4 square waves

volatile byte state = 0;

const int buttonPin = 13;                // PB5 (D13) as button input
const unsigned long debounceDelay = 200; // 200 ms debounce delay
unsigned long lastButtonPressTime = 0;
bool buttonWasPressed = false;

const unsigned int cyclesPerBurst = 4;  // 4 HIGH-LOW cycles per burst (~500 ns per burst)

void setup() {
  DDRB &= ~(1 << 5);  // PB5 as input (button)
  PORTB |= (1 << 5);  // Enable pull-up resistor on PB5

  DDRC = 0xFF;  // Set all PC0–PC7 as outputs
  DDRD = 0xFF;  // Set all PD0–PD7 as outputs
  PORTB |= 0x1F; // PB0–PB4 ON

}

void loop() {
  bool buttonState = (PINB & (1 << 5)) == 0;  // Button pressed = LOW on PB5
  unsigned long currentTime = millis();

  if (buttonState && !buttonWasPressed && (currentTime - lastButtonPressTime > debounceDelay)) {
    buttonWasPressed = true;
    lastButtonPressTime = currentTime;

    // Run 4 bursts of 4 cycles each at 2.6 MHz square wave
    for (int pass = 0; pass < 4; pass++) {
      for (unsigned int i = 0; i < cyclesPerBurst; i++) {
        PORTC = 0xFF;
        PORTD = 0xFF;

        PORTC = 0x00;
        PORTD = 0x00;

      }
    }
  }

  if (!buttonState) {
    buttonWasPressed = false;
  }
}